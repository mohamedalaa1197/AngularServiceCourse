{"version":3,"sources":["./src/app/add-book/add-book.component.html","./src/app/models/bookErrorTracker.ts","./src/app/add-book/add-book.component.ts","./src/app/app.component.css","./src/app/data.ts","./src/environments/environment.ts","./src/app/edit-book/edit-book.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/add-reader/add-reader.component.html","./src/app/core/data.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-reader/add-reader.component.ts","./src/app/app.module.ts","./src/app/edit-reader/edit-reader.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.ts","./src/app/core/logger.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe,m9CAAo5C,E;;;;;;;;;;;;ACCn6C;AAAA;AAAO,MAAM,SAAS;CAIrB;;;;;;;;;;;;;;;;;;;;ACLiD;IASrC,gBAAgB,SAAhB,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ,KAAK,CAAC;IAEd,QAAQ,CAAC,UAAe;QACtB,IAAI,OAAO,GAAe,UAAU,CAAC;QACrC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;IACrD,CAAC;CAEF;;AAbY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;KAEzC,CAAC;GACW,gBAAgB,CAa5B;AAb4B;;;;;;;;;;;;;ACT7B;AAAe,6GAA8C,mHAAmH,E;;;;;;;;;;;;ACGhL;AAAA;AAAA;AAAO,MAAM,UAAU,GAAa;IAChC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,iBAAiB,EAAE,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE;IAC9E,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,iBAAiB,EAAE,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE;IAC/E,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,iBAAiB,EAAE,GAAG,EAAE,gBAAgB,EAAE,GAAG,EAAE;CAC/E,CAAC;AAEG,MAAM,QAAQ,GAAW;IAC5B,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,qBAAqB,EAAE,eAAe,EAAE,IAAI,EAAE;IAC5F,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,EAAE;IACtF,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,MAAM,EAAE,gBAAgB,EAAE,eAAe,EAAE,IAAI,EAAE;IAClG,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,kBAAkB,EAAE,eAAe,EAAE,IAAI,EAAE;IACrF,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,EAAE;IAClF,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,MAAM,EAAE,eAAe,EAAE,eAAe,EAAE,IAAI,EAAE;CAC5G,CAAC;;;;;;;;;;;;;AChBF;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;;;;;ACPgD;AACD;AAIG;IAOvC,iBAAiB,SAAjB,iBAAiB;IAI5B,YAAoB,KAAqB,EACrB,IAAgB;QADhB,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;IACpB,CAAC;IAEjB,QAAQ;QACN,IAAI,MAAM,GAAW,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED,cAAc;QACV,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,WAAW;QACT,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAC5D,CAAC;CACF;;YA/BQ,8DAAc;YAId,iEAAW;;AAOP,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;KAE1C,CAAC;GACW,iBAAiB,CAoB7B;AApB6B;;;;;;;;;;;;;ACZ9B;AAAe,6cAA8Y,YAAY,4nBAA4nB,aAAa,mlBAAmlB,uBAAuB,UAAU,wBAAwB,iFAAiF,E;;;;;;;;;;;;ACA/wD;AAAe,i/CAAk7C,E;;;;;;;;;;;;;;;;;;;;;;;ACAt5C;AACK;AAI4C;AAC3C;AACO;AACf;AACX;IAMjB,WAAW,SAAX,WAAW;IAItB,YAAoB,MAAoB,EAAS,IAAe;QAA5C,WAAM,GAAN,MAAM,CAAc;QAAS,SAAI,GAAJ,IAAI,CAAW;QAFhE,oBAAe,GAAC,iDAAQ,CAAC,CAAC,CAAC,CAAC;IAEwC,CAAC;IAErE,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,YAAY,CAAC;aAChC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEjD,CAAC;IAEO,YAAY,CAAC,KAAuB;QAE1C,IAAI,SAAS,GAAC,IAAI,qEAAS,EAAE,CAAC;QAC9B,SAAS,CAAC,WAAW,GAAC,GAAG,CAAC;QAC1B,SAAS,CAAC,YAAY,GAAC,KAAK,CAAC,OAAO,CAAC;QACrC,SAAS,CAAC,eAAe,GAAC,yCAAyC,CAAC;QAEpE,OAAO,uDAAU,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,kBAAkB,CAAC,IAAS;QACzB,OAAO,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,EAAS;QACrB,OAAO,mDAAU,CAAC,IAAI,CAAC,MAAM,GAAE,OAAM,CAAC,QAAQ,KAAG,EAAE,CAAC,CAAC;IACvD,CAAC;IAGD,WAAW;QACT,OAAO,iDAAQ,CAAC;IAClB,CAAC;IAGD,WAAW,CAAC,EAAS;QACnB,OAAO,iDAAQ,CAAC,IAAI,CAAC,IAAI,GAAE,KAAI,CAAC,MAAM,KAAG,EAAE,CAAC,CAAC;IAC/C,CAAC;CACF;;YAhDQ,6DAAa;YADd,+DAAU;;AAUL,WAAW;IAJvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAEW,WAAW,CAuCvB;AAvCuB;;;;;;;;;;;;;;;;;;;;;;ACf0B;AACE;AACI;IAW3C,kBAAkB,SAAlB,kBAAkB;IAM7B,YAAoB,MAAoB,EAAS,IAAgB;QAA7C,WAAM,GAAN,MAAM,CAAc;QAAS,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEtE,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;aACpB,SAAS,CACR,CAAC,IAAyB,EAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAW,IAAI,EAC5D,CAAC,KAAe,EAAC,EAAE,QAAO,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,EACrD,GAAE,EAAE,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAC9C,CAAC;QACL,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;IACjD,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,CAAC,IAAI,CAAC,4CAA4C,MAAM,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,OAAO,CAAC,IAAI,CAAC,gDAAgD,QAAQ,IAAI,CAAC,CAAC;IAC7E,CAAC;CAEF;;YAtCQ,qEAAa;YADb,iEAAW;;AAYP,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;KAE1C,CAAC;GACW,kBAAkB,CA2B9B;AA3B8B;;;;;;;;;;;;;;;;;;;;;;ACbW;IAO7B,YAAY,SAAZ,YAAY;;QACvB,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACPzB;AAAe,+vCAAgsC,E;;;;;;;;;;;;;;;;;;;ACA7pC;IASrC,kBAAkB,SAAlB,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ,KAAK,CAAC;IAEd,UAAU,CAAC,UAAe;QACxB,IAAI,SAAS,GAAmB,UAAU,CAAC;QAC3C,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;IACvD,CAAC;CAEF;;AAbY,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;KAE3C,CAAC;GACW,kBAAkB,CAa9B;AAb8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT2B;AACjB;AACI;AACQ;AACY;AACM;AACxB;AACS;AACa;AACD;AACM;AACxB;AACI;IA4BzC,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IA1BrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,iFAAkB;YAClB,6EAAgB;YAChB,uFAAmB;YACnB,iFAAiB;YACjB,mFAAkB;SACnB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;QACD,SAAS,EAAE;YACT,iBAAiB;YACjB,oCAAoC;YACpC,oDAAoD;YACpD,sDAAsD;YACtD,MAAM;YACN,mEAAa;YACb,+DAAW;SACZ;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;ACxCtB;AAAe,ijDAAk/C,E;;;;;;;;;;;;ACAjgD;AAAe,4nDAA6jD,E;;;;;;;;;;;;;;;;;;;;;ACA1hD;AACD;AACG;IASvC,mBAAmB,SAAnB,mBAAmB;IAI9B,YAAoB,KAAqB,EACrB,IAAgB;QADhB,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;IAC9B,CAAC;IAEP,QAAQ;QACN,IAAI,QAAQ,GAAW,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IAED,WAAW;QACT,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;IACnD,CAAC;CACF;;YA1BQ,8DAAc;YACd,iEAAW;;AASP,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;KAE5C,CAAC;GACW,mBAAmB,CAgB/B;AAhB+B;;;;;;;;;;;;;;;;;;ACXW;IAK9B,aAAa,SAAb,aAAa;IAYxB,gBAAgB,CAAC;IAVjB,GAAG,CAAC,OAAe;QAEjB,MAAM,UAAU,GAAQ,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,KAAK,UAAU,GAAG,CAAC,CAAE;IAC7C,CAAC;IAED,KAAK,CAAC,OAAc;QAClB,OAAO,CAAC,GAAG,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC;IAElC,CAAC;CAEF;;AAbY,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,aAAa,CAazB;AAbyB;;;;;;;;;;;;;;;;;;;;;;;;ACLe;AACc;AAEY;AACM;AACF;AACD;AACM;AAE5E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gFAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yFAAmB,EAAE;IAC1D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mFAAiB,EAAE;IACtD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;CACzD,CAAC;IAMW,gBAAgB,SAAhB,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACtB7B;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC;;;;;;;;;;;;ACVpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add New Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","\r\nexport class BookError{\r\n erorrNumber:Number;\r\n errorMessage:String;\r\n friendlyMessage:String;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { Book } from \"app/models/book\";\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styles: []\n})\nexport class AddBookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveBook(formValues: any): void {\n    let newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n    console.warn('Save new book not yet implemented.');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\n  ];\n\nexport const allBooks: Book[] = [\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\n    { bookID: 2, title: 'Green Eggs and Ham', author: 'Dr. Seuss', publicationYear: 1960 },\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\n];","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Book } from 'app/models/book';\nimport { allBooks } from 'app/data';\nimport { DataService } from 'app/core/data.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styles: []\n})\nexport class EditBookComponent implements OnInit {\n\n  selectedBook: Book;\n\n  constructor(private route: ActivatedRoute,\n              private data:DataService\n              ) { }\n\n  ngOnInit() {\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedBook =this.data.getBookById(bookID);\n  }\n\n  setMostPopular(): void {\n      this.data.setMostPopularBook(this.selectedBook);\n  }\n\n  saveChanges(): void {\n    console.warn('Save changes to book not yet implemented.');\n  }\n}\n","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">All Books</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <li *ngFor='let book of allBooks'>\\n                        <i>{{book.title}}</i>\\n                        <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\n                        <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\n                    </li>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">All Readers</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <li *ngFor='let reader of allReaders'>\\n                        {{reader.name}}\\n                        <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n                        <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n                    </li>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\n                </div>\\n\\n\\n\\n                <div class=\\\"panel-body\\\">\\n                    <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { allBooks, allReaders } from 'app/data';\nimport { Book } from 'app/models/book';\nimport { Reader } from 'app/models/reader';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpErrorResponse, ɵHttpInterceptingHandler} from '@angular/common/http'\nimport { LoggerService } from './logger.service';\nimport { BookError } from 'app/models/bookErrorTracker';\nimport {catchError} from 'rxjs/operators'\nimport {throwError}from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataService {\n\n  mostPopularBook=allBooks[1];\n\n  constructor(private logger:LoggerService,private http:HttpClient) { }\n\n  getAllReaders():Observable<Reader[] | BookError>{\n    return this.http.get<Reader[]>('api/Reader')\n               .pipe(catchError(this.Errorhandler))\n\n  }\n\n  private Errorhandler(error:HttpErrorResponse):Observable<BookError>{\n\n    let dataError=new BookError();\n    dataError.erorrNumber=100;\n    dataError.errorMessage=error.message;\n    dataError.friendlyMessage='An error has occured in retriveing data';\n\n    return throwError(dataError);\n  }\n\n  setMostPopularBook(book:Book){\n     return this.mostPopularBook=book;\n  }\n\n  getreaderById(id:number):Reader{\n    return allReaders.find(reader=>reader.readerID===id);\n  }\n\n\n  getAllBooks():Book[]{\n    return allBooks;\n  }\n\n\n  getBookById(id:number):Book{\n    return allBooks.find(book=>book.bookID===id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'app/core/data.service';\nimport { LoggerService } from 'app/core/logger.service';\nimport { allBooks, allReaders } from 'app/data';\nimport { Book } from \"app/models/book\";\nimport { BookError } from 'app/models/bookErrorTracker';\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  allBooks: Book[] ;\n  allReaders: Reader[] ;\n  mostPopularBook: Book ;\n\n  constructor(private logger:LoggerService,private data:DataService) { }\n\n  ngOnInit() {\n    this.allBooks=this.data.getAllBooks();\n   this.data.getAllReaders()\n       .subscribe(\n         (data :Reader[] |BookError)=> this.allReaders=<Reader[]>data,\n         (error:BookError)=>console.log(error.friendlyMessage),\n         ()=>this.logger.log(\"The function has done!\")\n       );\n    this.mostPopularBook=this.data.mostPopularBook;\n  }\n\n  deleteBook(bookID: number): void {\n    console.warn(`Delete book not yet implemented (bookID: ${bookID}).`);\n  }\n\n  deleteReader(readerID: number): void {\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","export default \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\";","import { Component, OnInit } from '@angular/core';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styles: []\n})\nexport class AddReaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    console.warn('Save new reader not yet implemented.');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http'\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AddReaderComponent } from './add-reader/add-reader.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\nimport { DataService } from './core/data.service';\nimport { LoggerService } from './core/logger.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    // LoggerService,\n    // {provide:LoggerService,useValue:{\n    //     log:(message:string)=>{console.log(message)},\n    //     error:(message:string)=>{console.log(message);}\n    // }},\n    LoggerService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook.title\\\" name=\\\"title\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook.author\\\" name=\\\"author\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'app/core/data.service';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styles: []\n})\nexport class EditReaderComponent implements OnInit {\n\n  selectedReader: Reader;\n\n  constructor(private route: ActivatedRoute,\n              private data:DataService\n    ) { }\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedReader =this.data.getreaderById(readerID);\n  }\n\n  saveChanges() {\n    console.warn('Save reader not yet implemented.');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  log(message: String):void{\n\n    const timeString:String=new Date().toLocaleDateString();\n    console.log(`${message} (${timeString})`) ;\n  }\n\n  error(message:String):void{\n    console.log(`Error ${message}`);\n\n  }\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'addbook', component: AddBookComponent },\n  { path: 'addreader', component: AddReaderComponent },\n  { path: 'editreader/:id', component: EditReaderComponent },\n  { path: 'editbook/:id', component: EditBookComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}