{"version":3,"sources":["./src/app/add-book/add-book.component.html","./src/app/models/bookErrorTracker.ts","./src/app/add-book/add-book.component.ts","./src/app/app.component.css","./src/app/data.ts","./src/environments/environment.ts","./src/app/edit-book/edit-book.component.ts","./src/app/core/add-header.service.ts","./src/app/core/log-response.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/add-reader/add-reader.component.html","./src/app/core/data.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-reader/add-reader.component.ts","./src/app/core/httpcache.service.ts","./src/app/app.module.ts","./src/app/edit-reader/edit-reader.component.html","./src/app/edit-book/edit-book.component.html","./src/app/core/bookresolver.service.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/core/cach-interceptor.service.ts","./src/app/core/logger.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add New Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","\r\nexport class BookError{\r\n erorrNumber:Number;\r\n errorMessage:String;\r\n friendlyMessage:String;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'app/core/data.service';\nimport { Book } from \"app/models/book\";\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styles: []\n})\nexport class AddBookComponent implements OnInit {\n\n  constructor(private data:DataService) { }\n\n  ngOnInit() { }\n\n  saveBook(formValues: any): void {\n    let newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n\n    this.data.addBook(newBook)\n        .subscribe(\n          (BookData)=>console.log(BookData),\n          (error)=>console.log(\"There is an Erorr \"+error)\n        )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\n  ];\n\nexport const allBooks: Book[] = [\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\n    { bookID: 2, title: 'Green Eggs and Ham', author: 'Dr. Seuss', publicationYear: 1960 },\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\n];","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Book } from 'app/models/book';\nimport { allBooks } from 'app/data';\nimport { DataService } from 'app/core/data.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styles: []\n})\nexport class EditBookComponent implements OnInit {\n\n  selectedBook: Book;\n\n  constructor(private route: ActivatedRoute,\n              private data:DataService\n              ) { }\n\n  ngOnInit() {\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\n    this.data.getBookById(bookID)\n        .subscribe(\n          book=>this.selectedBook=book,\n          error=>console.log(\"There is an Error\"+error),\n          ()=>console.log(\"Request Completed!\")\n        )\n  }\n\n  setMostPopular(): void {\n      this.data.setMostPopularBook(this.selectedBook);\n  }\n\n  saveChanges(): void {\n\n     this.data.updateBook(this.selectedBook)\n                .subscribe(\n                  (data)=>console.log(`The book with id ${this.selectedBook.bookID} was updated`),\n                  (error)=>console.log(\"there is an Error \"+error)\n                )\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddHeaderService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    console.log(`AddHeaderInterceptor ${req.url}`);\n\n    let clonedRequest:HttpRequest<any>=req.clone({\n      setHeaders:{'Content-Type':'application/json'}\n    });\n    return next.handle(clonedRequest);\n  }\n}\n","import { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogResponseService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    console.log(`This is the log handler- ${req.url}`);\n    return next.handle(req)\n      .pipe(\n        tap(event => {\n          if(event.type=== HttpEventType.Response){\n            console.log(event.body);\n          }\n        })\n      )\n  }\n\n}\n","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">All Books</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <li *ngFor='let book of allBooks'>\\n                        <i>{{book.title}}</i>\\n                        <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\n                        <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\n                    </li>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">All Readers</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <li *ngFor='let reader of allReaders'>\\n                        {{reader.name}}\\n                        <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n                        <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n                    </li>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\n                </div>\\n\\n\\n\\n                <div class=\\\"panel-body\\\">\\n                    <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { allBooks, allReaders } from 'app/data';\nimport { Book } from 'app/models/book';\nimport { Reader } from 'app/models/reader';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpErrorResponse, HttpHeaders, ɵHttpInterceptingHandler} from '@angular/common/http'\nimport { LoggerService } from './logger.service';\nimport { BookError } from 'app/models/bookErrorTracker';\nimport {catchError,map,tap} from 'rxjs/operators'\nimport {throwError}from 'rxjs'\nimport { oldBook } from 'app/models/oldBook';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataService {\n\n  mostPopularBook=allBooks[1];\n\n  constructor(private logger:LoggerService,private http:HttpClient) { }\n\n  getAllReaders():Observable<Reader[] | BookError>{\n    return this.http.get<Reader[]>('/api/readers')\n               .pipe(catchError(this.Errorhandler))\n\n  }\n\n  private Errorhandler(error:HttpErrorResponse):Observable<BookError>{\n\n    let dataError=new BookError();\n    dataError.erorrNumber=100;\n    dataError.errorMessage=error.message;\n    dataError.friendlyMessage='An error has occured in retriveing data';\n\n    return throwError(dataError);\n  }\n\n  setMostPopularBook(book:Book){\n     return this.mostPopularBook=book;\n  }\n\n  getreaderById(id:number):Observable<Reader>{\n    return this.http.get<Reader>(`/api/Reader/${id}`)\n  }\n\n\n  getAllBooks():Observable<Book[]>{\n\n    return this.http.get<Book[]>(\"/api/books\",{\n      headers:new HttpHeaders({\n        'Accept':'application/json',\n        'Authorizaton':'my-token'\n      })\n    });\n  }\n\n  getOldBook(oldID:number):Observable<oldBook>{\n\n    return this.http.get<Book>(`/api/books/${oldID}`)\n               .pipe(\n                  map(b => <oldBook>{\n                    title:b.title,\n                    publicationYear:b.publicationYear\n                  }),\n                  tap(classicBook=>console.log(classicBook))\n               );\n  }\n\n  addBook(newBook:Book):Observable<Book>{\n    return this.http.post<Book>(\"/api/books\",newBook,{\n      headers:{\n        \"Content-Type\":\"application/json\"\n      }\n    })\n  };\n\n  updateBook(updatedBook:Book):Observable<void>{\n    return this.http.put<void>(`/api/books/${updatedBook.bookID}`,updatedBook)\n  }\n\n  deleteBook(deletedBookID:number):Observable<void>{\n    return this.http.delete<void>(`/api/books/${deletedBookID}`);\n  }\n\n  getBookById(id:number):Observable< Book>{\n    return this.http.get<Book>(`/api/book/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'app/core/data.service';\nimport { LoggerService } from 'app/core/logger.service';\nimport { allBooks, allReaders } from 'app/data';\nimport { Book } from \"app/models/book\";\nimport { BookError } from 'app/models/bookErrorTracker';\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  allBooks: Book[] ;\n  allReaders: Reader[] ;\n  mostPopularBook: Book ;\n\n  constructor(private logger:LoggerService,\n                private data:DataService,\n                private router:ActivatedRoute) { }\n\n  ngOnInit() {\n\n    let readerBooksData=this.router.snapshot.data[\"bookResolved\"];\n\n    if(readerBooksData instanceof BookError){\n      console.log(\"There is an Error!\");\n    }else{\n      this.allBooks=readerBooksData\n    }\n\n   this.data.getAllReaders()\n       .subscribe(\n         (data :Reader[] |BookError)=> this.allReaders=<Reader[]>data,\n         (error:BookError)=>console.log(error.friendlyMessage),\n         ()=>this.logger.log(\"The function has done!\")\n       );\n    this.mostPopularBook=this.data.mostPopularBook;\n  }\n\n  deleteBook(bookID: number): void {\n   this.data.deleteBook(bookID)\n       .subscribe(\n          (bookData:void)=>{\n            let index:number=this.allBooks.findIndex(book=>book.bookID===bookID);\n            this.allBooks.splice(index,0);\n          },\n          (error)=>console.log(\"There is an Error\"+error)\n       )\n\n  }\n\n  deleteReader(readerID: number): void {\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","export default \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\";","import { Component, OnInit } from '@angular/core';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styles: []\n})\nexport class AddReaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    console.warn('Save new reader not yet implemented.');\n  }\n\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpcacheService {\n\n  private requests:any={};\n\n  constructor() { }\n\n  put(url:string, response:HttpResponse<any>):void{\n\n    this.requests[url]=response;\n  }\n   get(url:string):HttpResponse<any> | undefined{\n     return this.requests[url];\n   }\n\n   invalidateUrl(url:string):void{\n    this.requests[url]=undefined;\n   }\n\n   invalidateCashe():void{\n    this.requests={};\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http'\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AddReaderComponent } from './add-reader/add-reader.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\nimport { DataService } from './core/data.service';\nimport { LoggerService } from './core/logger.service';\nimport { AddHeaderService } from './core/add-header.service';\nimport { LogResponseService } from './core/log-response.service';\nimport { CachInterceptorService } from './core/cach-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    // LoggerService,\n    // {provide:LoggerService,useValue:{\n    //     log:(message:string)=>{console.log(message)},\n    //     error:(message:string)=>{console.log(message);}\n    // }},\n    {provide:HTTP_INTERCEPTORS,useClass:AddHeaderService,multi:true},\n    {provide:HTTP_INTERCEPTORS,useClass:LogResponseService,multi:true},\n    {provide:HTTP_INTERCEPTORS,useClass:CachInterceptorService,multi:true},\n\n    LoggerService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook.title\\\" name=\\\"title\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook.author\\\" name=\\\"author\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Book } from 'app/models/book';\nimport { BookError } from 'app/models/bookErrorTracker';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookresolverService implements Resolve<Book[] |BookError > {\n\n\n  constructor(private data:DataService) { }\n\n  resolve(route:ActivatedRouteSnapshot,state:RouterStateSnapshot):Observable<Book[] |BookError>{\n    return this.data.getAllBooks()\n               .pipe(\n                 catchError(err=>of(err))\n               );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'app/core/data.service';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styles: []\n})\nexport class EditReaderComponent implements OnInit {\n\n  selectedReader: Reader;\n\n  constructor(private route: ActivatedRoute,\n              private data:DataService\n    ) { }\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedReader =this.data.getreaderById(readerID);\n  }\n\n  saveChanges() {\n    console.warn('Save reader not yet implemented.');\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpcacheService } from './httpcache.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CachInterceptorService implements HttpInterceptor {\n\n  constructor(private cacheService:HttpcacheService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    //if the reuest is not GET the move to the next interceptor and remove all the cached data\n    if(req.method==='GET'){\n      console.log(`unCaching the data of url ${req.url}`);\n      this.cacheService.invalidateCashe();\n      return next.handle(req);\n    }\n\n    //see if there is a response cached for this request(url)\n\n    const cachedResponse=this.cacheService.get(req.url);\n\n    // if the cachedResposne is not null then we have the data fro the cache\n    if(cachedResponse){\n\n      console.log(`Returning data from the cached response for ${req.url} `);\n      console.log(cachedResponse);\n      return of(cachedResponse);\n    }\n\n    return next.handle(req)\n            .pipe(\n              tap(event=>{\n                if(event instanceof HttpResponse){\n                  console.log(`Adding item to the cache for the url ${req.url}`);\n                  this.cacheService.put(req.url,event)\n                }\n              })\n            )\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  log(message: String):void{\n\n    const timeString:String=new Date().toLocaleDateString();\n    console.log(`${message} (${timeString})`) ;\n  }\n\n  error(message:String):void{\n    console.log(`Error ${message}`);\n\n  }\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\nimport { BookresolverService } from './core/bookresolver.service';\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent,resolve:{bookResolved:BookresolverService} },\n  { path: 'addbook', component: AddBookComponent },\n  { path: 'addreader', component: AddReaderComponent },\n  { path: 'editreader/:id', component: EditReaderComponent },\n  { path: 'editbook/:id', component: EditBookComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}